[project]
name = "arsenalpy"
version = "0.1.0"
description = "Clustr's Lab Arsenal is a powerful, unified interface for interacting with multiple AI models, executing complex skills"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "httpx>=0.28.1",
    "openai>=1.63.2",
    "pydantic>=2.6.4",
    "python-dotenv>=1.0.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.optional-dependencies]

# All optional features combined
all = ["crawl4ai>=0.4.247"]

# Development dependencies (includes testing)
dev = [
    "crawl4ai>=0.4.247",
    "black>=24.3.0",
    "isort>=5.13.2",
    "mypy>=1.9.0",
    "ruff>=0.3.0",
    "pytest>=8.3.4",
    "pytest-asyncio>=0.23.5",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "respx>=0.22.0",
]


[tool.hatch.build]
include = ["src/arsenalpy/**/*"]
exclude = ["tests/**/*", "*.md", "*.lock" , "examples/**/*" , "assets/**/*"]

[tool.hatch.build.targets.wheel]
packages = ["src/arsenalpy"]

[tool.hatch.metadata]
package-dir = "src"

[tool.black]
line-length = 88
target-version = ["py312"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88
known_first_party = ["arsenalpy"]
skip_gitignore = true

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "B", "I"]
ignore = ["E501"]  # Ignore line length errors as black will handle them

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
exclude = ['.venv', 'venv', '.env']
ignore_errors = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false
